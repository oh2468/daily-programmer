## https://old.reddit.com/r/dailyprogrammer/comments/826coe/20180305_challenge_353_easy_closest_string/

def closest_string(n, strings):
    dist_count = {s: 0 for s in strings}
    for i in range(n - 1):
        s1 = strings[i]
        for j in range(i + 1, n):
            s2 = strings[j]
            for a, b in zip(s1, s2):
                if a != b:
                    dist_count[s1] += 1
                    dist_count[s2] += 1
    return min(dist_count.items(), key=lambda it: it[1])[0]

input_1 = """ATCAATATCAA
ATTAAATAACT
AATCCTTAAAC
CTACTTTCTTT
TCCCATCCTTT
ACTTCAATATA""".split("\n")

input_2 = """CTCCATCACAC
AATATCTACAT
ACATTCTCCAT
CCTCCCCACTC""".split("\n")

cha_input_1 = """AACACCCTATA
CTTCATCCACA
TTTCAATTTTC
ACAATCAAACC
ATTCTACAACT
ATTCCTTATTC
ACTTCTCTATT
TAAAACTCACC
CTTTTCCCACC
ACCTTTTCTCA
TACCACTACTT""".split("\n")

cha_input_2 = """ACAAAATCCTATCAAAAACTACCATACCAAT
ACTATACTTCTAATATCATTCATTACACTTT
TTAACTCCCATTATATATTATTAATTTACCC
CCAACATACTAAACTTATTTTTTAACTACCA
TTCTAAACATTACTCCTACACCTACATACCT
ATCATCAATTACCTAATAATTCCCAATTTAT
TCCCTAATCATACCATTTTACACTCAAAAAC
AATTCAAACTTTACACACCCCTCTCATCATC
CTCCATCTTATCATATAATAAACCAAATTTA
AAAAATCCATCATTTTTTAATTCCATTCCTT
CCACTCCAAACACAAAATTATTACAATAACA
ATATTTACTCACACAAACAATTACCATCACA
TTCAAATACAAATCTCAAAATCACCTTATTT
TCCTTTAACAACTTCCCTTATCTATCTATTC
CATCCATCCCAAAACTCTCACACATAACAAC
ATTACTTATACAAAATAACTACTCCCCAATA
TATATTTTAACCACTTACCAAAATCTCTACT
TCTTTTATATCCATAAATCCAACAACTCCTA
CTCTCAAACATATATTTCTATAACTCTTATC
ACAAATAATAAAACATCCATTTCATTCATAA
CACCACCAAACCTTATAATCCCCAACCACAC""".split("\n")

assert closest_string(len(input_1), input_1) == "ATTAAATAACT"
assert closest_string(len(input_2), input_2) == "AATATCTACAT"
assert closest_string(len(cha_input_1), cha_input_1) == "ATTCTACAACT"
assert closest_string(len(cha_input_2), cha_input_2) == "TTAACTCCCATTATATATTATTAATTTACCC"
